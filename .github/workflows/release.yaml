name: Publish Release

on:
  workflow_run:
    workflows: ["Test Prod"]
    types:
      - completed

jobs:
  tag:
    if: ${{ github.event.workflow_run.conclusion == 'success'}}
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.extract_version.outputs.version }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Rust
        run: |
          rustup update stable
          rustup default stable

      - name: Cache Cargo Registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Extract Version from Cargo.toml
        id: extract_version
        run: |
          version=$(grep ^version Cargo.toml | sed -E 's/version *= *"([^"]+)"/\1/')
          echo "version=$version" >> $GITHUB_ENV
          echo "version=$version" >> $GITHUB_OUTPUT

      - name: Setup Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "<41898282+github-actions[bot]@users.noreply.github.com>"
          git fetch --all --tags

      - name: Tag Prod
        run: |
          git checkout prod
          git tag ${{ env.version }}
          git push --tags

  release_windows:
    needs: tag
    name: Compile and Archive Windows
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Rust
        shell: bash
        run: |
          rustup update stable
          rustup default stable

      - name: Cache Cargo Registry
        uses: actions/cache@v4
        with:
          path: |
            C:\Users\runneradmin\.cargo\registry
            C:\Users\runneradmin\.cargo\git
          key: ${{ runner.os }}-cargo-${{ hashFiles('Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Build and Move Executable
        run: |
          cargo build --release
          Move-Item target\release\project-catalyst.exe .

      - name: Construct Release Name
        shell: powershell
        run: |
          $version = '${{ needs.tag.outputs.version }}'
          $version = $version -replace '\.', '-'
          echo "archive_name=ProjectCatalyst_${version}_Windows.zip" >> $env:GITHUB_ENV

      - name: Create Archive
        shell: powershell
        run: |
          Compress-Archive -Path project-catalyst.exe, assets -DestinationPath $env:archive_name

      - name: Upload Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.tag.outputs.version }}
          files: ${{ env.archive_name }}

  release_linux:
    needs: tag
    name: Compile and Archive Linux
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Rust
        run: |
          rustup update stable
          rustup default stable

      - name: Cache Cargo Registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Install Dependencies
        run: |
          sudo apt update
          sudo apt install -y \
            clang \
            pkg-config \
            libx11-dev \
            libasound2-dev \
            libudev-dev \
            libxkbcommon-x11-0 \
            libwayland-dev \
            libxkbcommon-dev

      - name: Build and Move Executable
        run: |
          cargo build --release
          mv target/release/project-catalyst .

      - name: Construct Release Name
        run: |
          version=${{ needs.tag.outputs.version }}
          version="${version//./-}"
          echo "archive_name=ProjectCatalyst_${version}_Linux.tar.gz" >> $GITHUB_ENV

      - name: Create Archive
        run: |
          tar -czvf ${{ env.archive_name }} project-catalyst assets

      - name: Upload Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.tag.outputs.version }}
          files: ${{ env.archive_name }}

  release_macos:
    needs: tag
    name: Compile and Archive macOS
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Rust
        run: |
          rustup update stable
          rustup default stable

      - name: Cache Cargo Registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Build and Move Executable
        run: |
          cargo build --release
          mv target/release/project-catalyst .

      - name: Construct Release Name
        run: |
          version=${{ needs.tag.outputs.version }}
          version="${version//./-}"
          echo "archive_name=ProjectCatalyst_${version}_macOS.zip" >> $GITHUB_ENV

      - name: Create Archive
        run: zip -r ${{ env.archive_name }} project-catalyst assets

      - name: Upload Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.tag.outputs.version }}
          files: ${{ env.archive_name }}
